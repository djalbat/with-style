"use strict";
var _index = require("./index");
var generateStyle = _index.stylesUtilities.generateStyle, retrieveStyle = _index.stylesUtilities.retrieveStyle, renderStyles = _index.stylesUtilities.renderStyles;
var firaCodeFontMixin = '\n\n  font-size: 1.3rem;\n  line-height: 20px;\n  font-family: "Fira Code";\n  text-rendering: optimizeLegibility; /* Force ligatures for Webkit, Blink, Gecko */\n  font-feature-settings: "calt" 1;  /* Enable ligatures for IE 10+, Edge */\n\n';
var monospaceFontMixin = "\n\n  font-size: 1.3rem;\n  line-height: 20px;\n  font-family: monospace;\n   \n";
generateStyle([
    [
        "\n\n  width: auto !important;\n\n  display: none;\n  \n  .active {\n    display: block;\n  }\n  \n  @keyframes redish {\n    0% { color: darkred; }\n    50% { color: red; }\n    100% { color: lightred; }\n  }\n  \n  @media (min-width: 640px) {\n\n    padding-top: 1rem; \n    \n    .menu {\n      margin: 0;    \n    }\n\n  }\n\n"
    ]
], "abc");
var superStyle = retrieveStyle("abc");
generateStyle([
    [
        "\n\n  color: transparent;\n  width: auto;\n  height: 100%;\n  cursor: auto;\n  resize: none;\n  outline: none;\n  tab-size: 2;\n  border-top: none;\n  overflow-x: scroll;\n  overflow-y: scroll;\n  caret-color: transparent;\n  white-space: pre;\n  overflow-wrap: normal;\n  background-color: transparent;\n\n  @keyframes blueish {\n    0% { color: darkblue; }\n    50% { color: blue; }\n    100% { color: lightblue; }\n  }\n  \n  ::selection { background-color: transparent; }\n  \n  ".concat(monospaceFontMixin, "\n\n  .fira-code {\n\n    ").concat(firaCodeFontMixin, "\n    \n  }\n  \n")
    ]
], "def", superStyle);
renderStyles();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9leGFtcGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzdHlsZXNVdGlsaXRpZXMgfSBmcm9tIFwiLi9pbmRleFwiOyAvLy9cblxuY29uc3QgeyBnZW5lcmF0ZVN0eWxlLCByZXRyaWV2ZVN0eWxlLCByZW5kZXJTdHlsZXMgfSA9IHN0eWxlc1V0aWxpdGllcztcblxuY29uc3QgZmlyYUNvZGVGb250TWl4aW4gPSBgXG5cbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LWZhbWlseTogXCJGaXJhIENvZGVcIjtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgLyogRm9yY2UgbGlnYXR1cmVzIGZvciBXZWJraXQsIEJsaW5rLCBHZWNrbyAqL1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwiY2FsdFwiIDE7ICAvKiBFbmFibGUgbGlnYXR1cmVzIGZvciBJRSAxMCssIEVkZ2UgKi9cblxuYDtcblxuY29uc3QgbW9ub3NwYWNlRm9udE1peGluID0gYFxuXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBsaW5lLWhlaWdodDogMjBweDtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcbiAgIFxuYDtcblxuZ2VuZXJhdGVTdHlsZShbW2BcblxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuXG4gIGRpc3BsYXk6IG5vbmU7XG4gIFxuICAuYWN0aXZlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICBcbiAgQGtleWZyYW1lcyByZWRpc2gge1xuICAgIDAlIHsgY29sb3I6IGRhcmtyZWQ7IH1cbiAgICA1MCUgeyBjb2xvcjogcmVkOyB9XG4gICAgMTAwJSB7IGNvbG9yOiBsaWdodHJlZDsgfVxuICB9XG4gIFxuICBAbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcblxuICAgIHBhZGRpbmctdG9wOiAxcmVtOyBcbiAgICBcbiAgICAubWVudSB7XG4gICAgICBtYXJnaW46IDA7ICAgIFxuICAgIH1cblxuICB9XG5cbmBdXSwgXCJhYmNcIik7XG5cbmNvbnN0IHN1cGVyU3R5bGUgPSByZXRyaWV2ZVN0eWxlKFwiYWJjXCIpO1xuXG5nZW5lcmF0ZVN0eWxlKFtbYFxuXG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTAwJTtcbiAgY3Vyc29yOiBhdXRvO1xuICByZXNpemU6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRhYi1zaXplOiAyO1xuICBib3JkZXItdG9wOiBub25lO1xuICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgY2FyZXQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICBvdmVyZmxvdy13cmFwOiBub3JtYWw7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG4gIEBrZXlmcmFtZXMgYmx1ZWlzaCB7XG4gICAgMCUgeyBjb2xvcjogZGFya2JsdWU7IH1cbiAgICA1MCUgeyBjb2xvcjogYmx1ZTsgfVxuICAgIDEwMCUgeyBjb2xvcjogbGlnaHRibHVlOyB9XG4gIH1cbiAgXG4gIDo6c2VsZWN0aW9uIHsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgXG4gICR7bW9ub3NwYWNlRm9udE1peGlufVxuXG4gIC5maXJhLWNvZGUge1xuXG4gICAgJHtmaXJhQ29kZUZvbnRNaXhpbn1cbiAgICBcbiAgfVxuICBcbmBdXSwgXCJkZWZcIiwgc3VwZXJTdHlsZSk7XG5cbnJlbmRlclN0eWxlcygpO1xuIl0sIm5hbWVzIjpbImdlbmVyYXRlU3R5bGUiLCJzdHlsZXNVdGlsaXRpZXMiLCJyZXRyaWV2ZVN0eWxlIiwicmVuZGVyU3R5bGVzIiwiZmlyYUNvZGVGb250TWl4aW4iLCJtb25vc3BhY2VGb250TWl4aW4iLCJzdXBlclN0eWxlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFbUIsSUFBQSxNQUFTLFdBQVQsU0FBUyxDQUFBO0FBRXpDLElBQVFBLGFBQWEsR0FBa0NDLE1BQWUsZ0JBQUEsQ0FBOURELGFBQWEsRUFBRUUsYUFBYSxHQUFtQkQsTUFBZSxnQkFBQSxDQUEvQ0MsYUFBYSxFQUFFQyxZQUFZLEdBQUtGLE1BQWUsZ0JBQUEsQ0FBaENFLFlBQVksQUFBcUI7QUFFdkUsSUFBTUMsaUJBQWlCLEdBQUksb1BBUTNCLEFBQUMsQUFBQztBQUVGLElBQU1DLGtCQUFrQixHQUFJLGtGQU01QixBQUFDLEFBQUM7QUFFRkwsYUFBYSxDQUFDO0lBQUM7UUFBRSwyVUEwQmpCO0tBQUU7Q0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBRVosSUFBTU0sVUFBVSxHQUFHSixhQUFhLENBQUMsS0FBSyxDQUFDLEFBQUM7QUFFeENGLGFBQWEsQ0FBQztJQUFDO1FBQUUscWVBeUJmLENBSUlJLE1BQWlCLENBSm5CQyxrQkFBa0IsRUFBQyw0QkFJbkIsQ0FBb0IsQ0FBQSxNQUl4QixDQUpNRCxpQkFBaUIsRUFBQyxtQkFJeEIsQ0FBQztLQUFDO0NBQUMsRUFBRSxLQUFLLEVBQUVFLFVBQVUsQ0FBQyxDQUFDO0FBRXhCSCxZQUFZLEVBQUUsQ0FBQyJ9